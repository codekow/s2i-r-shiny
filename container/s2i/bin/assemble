#!/bin/bash
set -e

usage(){
	if [[ "$1" == "-h" ]]; then
		exec /usr/libexec/s2i/usage
	fi
}

restore_artifacts(){
  # Restore artifacts from the previous build (if they exist).
  # We set them here just for show, but you will need to set this up with your logic
  # according to the application directory that you chose.

  if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
    echo "---> Restoring build artifacts..."
    mv /tmp/artifacts/* /opt/app-root/etc
  fi
}

setup_src_files(){
  # install src files
  if [ "$(ls -A /tmp/src)" ]; then
    mv /tmp/src/* /opt/app-root/src/
  fi
}

setup_r_file(){
  R_SETUP_FILE="${R_SETUP_FILE:-setup.R}"
  echo "Checking for ${R_SETUP_FILE}"
  if [ -e "${R_SETUP_FILE}" ]; then
    echo "Attempting to run 'R --no-save < '"${R_SETUP_FILE}"''"
    R --no-save < "${R_SETUP_FILE}"
  fi
}

setup_r_profile(){
  R_PROFILE_FILE=/opt/app-root/src/.Rprofile
  if [ ! -e "${R_PROFILE_FILE}" ]; then
    echo "Creating ${R_PROFILE_FILE}"
    echo 'options(repos = c(CRAN = "http://cran.rstudio.com"))' >> /opt/app-root/src/.Rprofile
  fi
}

check_r_dependencies(){
  echo "Checking dependencies..."
  PKGS=$(sed -n 's/library(\(.*\)).*/\1/pg; s/^.*[ (]\([^ :]*\)::.*/\1/pg' *.R | sort -u)

  echo "==== PKGS ====" 
  echo -e "${PKGS}\n"

  for pkg in $(echo ${PKGS})
  do
    echo 'install.packages('"${pkg}"', INSTALL_opts=c("--no-docs", "--no-help", "--no-html"))' | R --no-save
  done
}

clean_tmp(){
  rm -rf /tmp/R* /tmp/downloaded_packages
}

# restore_artifacts
# setup_r_profile
usage
setup_src_files
setup_r_file
check_r_dependencies
clean_tmp
